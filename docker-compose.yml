# Video Venture Launch - Docker Compose Development Environment
# Author: JP + 2024-12-19
# 3 Musketeers pattern implementation

version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: development
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src:ro
      - ./public:/app/public:ro
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
      - ./vite.config.ts:/app/vite.config.ts:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./tsconfig.app.json:/app/tsconfig.app.json:ro
      - ./tailwind.config.ts:/app/tailwind.config.ts:ro
      - ./postcss.config.js:/app/postcss.config.js:ro
      - ./index.html:/app/index.html:ro
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - app-network
    command: npm run dev -- --host 0.0.0.0

  # Backend FastAPI Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app:ro
      - ./backend/requirements.txt:/app/requirements.txt:ro
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - GEMINI_KEY=${GEMINI_KEY}
      - ENVIRONMENT=development
      - DATABASE_URL=firestore://video-venture-dev
    depends_on:
      - redis
    networks:
      - app-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  # Database (Firestore Emulator for local development)
  firestore:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
    ports:
      - "8080:8080"
      - "4000:4000"
    volumes:
      - firestore_data:/data
    networks:
      - app-network
    command: >
      sh -c "
        gcloud components install cloud-firestore-emulator --quiet &&
        gcloud beta emulators firestore start --host-port=0.0.0.0:8080 --rules=/dev/null
      "

volumes:
  node_modules:
  redis_data:
  firestore_data:

networks:
  app-network:
    driver: bridge 